<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="strOptionPanelGeneral" xml:space="preserve">
    <value>General Settings</value>
  </data>
  <assembly alias="System.Windows.Forms" name="System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="action_add_16xMD" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\action_add_16xMD.png;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="strAboutDlgCopyright" xml:space="preserve">
    <value>Copyright 2018 Couchcoding. All Right Reserved.</value>
  </data>
  <data name="strColumnizerConfigurationEnterColumnNameAndExpression" xml:space="preserve">
    <value>Please enter a name and an expression for each configure column.</value>
  </data>
  <data name="strMessageDetailsCopyButtonTooltip" xml:space="preserve">
    <value>Copy {0} Details to the Clipboard</value>
  </data>
  <data name="strErrorLoadingScript" xml:space="preserve">
    <value>Error loading script: {0}</value>
  </data>
  <data name="strEventLogReceiverNoLogNameAvailable" xml:space="preserve">
    <value>No event log name available to listen for.</value>
  </data>
  <data name="strMainUnableToOpenUri" xml:space="preserve">
    <value>The Logbert Homepage could not be opened. Please open your browser and navigate to "{0}".</value>
  </data>
  <data name="strNlogTcpReceiverNetworkIPAddress" xml:space="preserve">
    <value>IP Address:{0}{1}{2}</value>
  </data>
  <data name="strSyslogReceiverInvalidIpAddress" xml:space="preserve">
    <value>The given IP address is invalid.</value>
  </data>
  <data name="strOptionPanelScriptEditor" xml:space="preserve">
    <value>Script Editor</value>
  </data>
  <data name="strNLogDirectoryReceiverSelectDirectoryToObserve" xml:space="preserve">
    <value>Select the log directory to observe.</value>
  </data>
  <data name="strLog4NetDirectoryReceiverSelectDirectoryToObserve" xml:space="preserve">
    <value>Select the log directory to observe.</value>
  </data>
  <data name="strOptionPanelPleaseWait" xml:space="preserve">
    <value>Please wait...</value>
  </data>
  <data name="LogLevel_16x" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\LogLevel_16x.png;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="strNlogTcpReceiverNetworkDescription" xml:space="preserve">
    <value>Description:{0}{1}{2}</value>
  </data>
  <data name="strSaveLogToTextFilePattern" xml:space="preserve">
    <value>All Files (*.*)|*.*|General Text Files (*.txt)|*.txt</value>
  </data>
  <data name="strAboutDlgVersion" xml:space="preserve">
    <value>Version: {0}</value>
  </data>
  <data name="strLoggerRoot" xml:space="preserve">
    <value>Logger Root</value>
  </data>
  <data name="strValidationResultUnkownError" xml:space="preserve">
    <value>Unkown Error</value>
  </data>
  <data name="strEventLogReceiverNoUsername" xml:space="preserve">
    <value>N/A</value>
  </data>
  <data name="strDocumentMessageCount" xml:space="preserve">
    <value>{0} Messages ({1} displayed)</value>
  </data>
  <data name="strLuaEditorDefaultContent" xml:space="preserve">
    <value>--[[

Logbert Lua script interface

There are some callback and calling functions you may use in this scripting window.
All provided Lua methods are available. So be careful what you are doing!

Callback Functions:

  - OnMessagesReceived
    This function is called if at least one message is received and displayed in the log window.
    It provides all new received log messages as a Lua table as parameter.

    OnMessagesReceived = function (msgs)
      for k, v in pairs(msgs) do
        ...
      end
    end

    Each table entry represents a log message with following values:

      msgs.Index                        -- The Index of the log message, means the 'Number' column within the log window.
      msgs.Level                        -- The Level of the log message. E.g. Error, Warning, Info...
      msgs.Logger                       -- The Logger of the log message.
      msgs.Message                      -- The received log message.
      msgs.RawData                      -- The unformatted raw data. May be XML or a simple string.
      msgs.TimeShiftOffset              -- The current time shift offset of the log message.
      msgs.Timestamp.Day                -- The day, Logbert received the log message.
      msgs.Timestamp.Month              -- The month, Logbert received the log message.
      msgs.Timestamp.Year               -- The year, Logbert received the log message.
      msgs.Timestamp.Hour               -- The hour, Logbert received the log message.
      msgs.Timestamp.Minute             -- The minute, Logbert received the log message.
      msgs.Timestamp.Second             -- The second, Logbert received the log message.
      msgs.Timestamp.Millisecond        -- The millisecond, Logbert received the log message.
      msgs.Timestamp.Timestamp          -- The unix timestamp, Loggert received the log message.

    There are additional table value available for some log receivers.

      Log4Net receiver:

        msgs.Thread                     -- The Thread of the log message.
        msgs.Location                   -- The Location of the log message.
        msgs.CustomProperties           -- The Custom Properties of the log message.

      Syslog receiver:

        msgs.Facility                   -- The Syslog facility.
        msgs.LocalTimesamp.Day          -- The day the log message was raised on the sender.
        msgs.LocalTimesamp.Month        -- The month the log message was raised on the sender.
        msgs.LocalTimesamp.Year         -- The year the log message was raised on the sender.
        msgs.LocalTimesamp.Hour         -- The hour the log message was raised on the sender.
        msgs.LocalTimesamp.Minute       -- The minute the log message was raised on the sender.
        msgs.LocalTimesamp.Second       -- The second the log message was raised on the sender.
        msgs.LocalTimesamp.Millisecond  -- The millisecond the log message was raised on the sender.
        msgs.LocalTimesamp.Timestamp    -- The unix timestamp the log message was raised on the sender.

      Eventlog receiver:

        msgs.InstanceId                 -- The Log4Net instance ID information.
        msgs.Category                   -- The Log4Net category information.
        msgs.Username                   -- The Log4Net user name information.
        msgs.Data                       -- The Log4Net data.

  - OnBookmarksChanged
    This Function is called if you add or remove a bookmark within a receiver. 
    It provides the log messages as a Lua table with a bookmark as parameter.

    OnBookmarksChanged = function (msgs)
      for k, v in pairs(msgs) do
        ...
      end
    end

    The table in the parameter is in the same format as the table given in the function OnMessagesReceived.

Functions:

  - Clear:
    The clear function clears all received log messages.

    - Parameters: None
    - Returns:    Nothing

    - Example:
      ...
      Clear()
      ....

  - Debug:
    This function writes the as parameter given string into the log window above the script editor.

    - Parameters: String, the message to display.
    - Returns:    Nothing

    - Example:
      ...
      Debug("Hello from Logbert!")
      ...

  - MsgBox:
    Shows a message box with the as parameter given text to the user.

    - Parameters: String, the message to display.
    - Returns:    Nothing

    - Example:
      ...
      MsgBox("Hello from Logbert!")
      ...

  - SetBookmark:
    Creates a new bookmark for the as parameter given log message.

    - Parameters: Integer, the index of the log message to create a bookmark for.
    - Returns:    Boolean, true if a bookmark was created for the message; otherwise false.

    - Example:
      ...
      SetBookmark(100)
      ...

  - DelBookmark:
    Deletes a bookmark of a message with the as parameter specified index.

    - Parameters: Integer, the index of the log message to remove from the bookmark list.
    - Returns:    Boolean, true if the bookmark was deleted; otherwise false.

    - Example:
      ...
      DelBookmark(100)
      ...

  - GetLogMessage:
    Gets a log message with the index specified as parameter.

    - Parameters: Integer, the index of the message to get.
    - Returns:    Table,   the log message with the specified index, or nil if none was found.

    - Example:
      ...
      local msg = GetLogMessage(100)
      ...

--]]

OnMessagesReceived = function (msgs)


end

OnBookmarksChanged = function (msgs)


end</value>
  </data>
  <data name="strFilterNotMatchEndTag" xml:space="preserve">
    <value>)</value>
  </data>
  <data name="strColumnizerConfigurationAddAtLeastOneRow" xml:space="preserve">
    <value>Please add at least one columnizer with a name and an expression.</value>
  </data>
  <data name="strEventLogReceiverNoMachineName" xml:space="preserve">
    <value>No machine name to listen on is set.</value>
  </data>
  <data name="arrow_Down_16xLG" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\arrow_Down_16xLG.png;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="strColumnizerDefaultName" xml:space="preserve">
    <value>New Columnizer</value>
  </data>
  <data name="strClearMruList" xml:space="preserve">
    <value>&amp;Clear Items</value>
  </data>
  <data name="strDocumentStatusRunning" xml:space="preserve">
    <value>Status: Running</value>
  </data>
  <data name="strLog4NetUdpReceiverNoNetworkInterfaceAvailable" xml:space="preserve">
    <value>No network interface available to listen on.</value>
  </data>
  <data name="strNLogDirectodyReceiverDirectoryDoesNotExist" xml:space="preserve">
    <value>The specified directory does not exists. Please select an existing one.</value>
  </data>
  <data name="strEventLogReceiverNoCategory" xml:space="preserve">
    <value>None</value>
  </data>
  <data name="logbert_about" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\logbert.about.png;System.Drawing.Bitmap, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="Logbert_Start_Screen" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\Logbert Start Screen.png;System.Drawing.Bitmap, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="strFilterDlgEditFilter" xml:space="preserve">
    <value>Edit Filter</value>
  </data>
  <data name="strLog4NetFileReceiverFilePattern" xml:space="preserve">
    <value>All Files (*.*)|*.*|Log4Net Files (*.log)|*.log</value>
  </data>
  <data name="strOptionPanelFontColorName" xml:space="preserve">
    <value>Font and Color</value>
  </data>
  <data name="strFilterNotMatchStartTag" xml:space="preserve">
    <value>NOT (</value>
  </data>
  <data name="strLog4NetFileReceiverFileDoesNotExist" xml:space="preserve">
    <value>The given log file does not exist. Please select an existing one.</value>
  </data>
  <data name="strFileLoadPattern" xml:space="preserve">
    <value>All Files (*.*)|*.*|General Log Files (*.log)|*.log</value>
  </data>
  <data name="strNLogUdpReceiverNetworkDescription" xml:space="preserve">
    <value>Description:{0}{1}{2}</value>
  </data>
  <data name="strLoggerDetailsCtrlOffset" xml:space="preserve">
    <value> (Offset: {0} Milliseconds)</value>
  </data>
  <data name="strSyslogFileReceiverFilePattern" xml:space="preserve">
    <value>All Files (*.*)|*.*|Syslog Files (*.log)|*.log</value>
  </data>
  <data name="strLuaEditorErrorExecutingScript" xml:space="preserve">
    <value>Error executing script: {0}{1}</value>
  </data>
  <data name="strOpenLuaFilter" xml:space="preserve">
    <value>All Files (*.*)|*.*|Lua scripts (*.lua)|*.lua</value>
  </data>
  <data name="strSaveLuaFilter" xml:space="preserve">
    <value>All Files (*.*)|*.*|Lua scripts (*.lua)|*.lua</value>
  </data>
  <data name="strNlogTcpReceiverNoNetworkInterfaceAvailable" xml:space="preserve">
    <value>No network interface available to listen on.</value>
  </data>
  <data name="strLog4NetUdpReceiverNetworkDescription" xml:space="preserve">
    <value>Description:{0}{1}{2}</value>
  </data>
  <data name="strSaveLogErrorOccured" xml:space="preserve">
    <value>An error occured while writing the logged messages to the file: {0}</value>
  </data>
  <data name="strDefaultLuaFilename" xml:space="preserve">
    <value>Logbert Script.lua</value>
  </data>
  <data name="strNLogFileReceiverFilePattern" xml:space="preserve">
    <value>All Files (*.*)|*.*|NLog Files (*.log)|*.log</value>
  </data>
  <data name="strSaveLogDefaultName" xml:space="preserve">
    <value>unknown.txt</value>
  </data>
  <data name="strSaveLogToCSVFilePattern" xml:space="preserve">
    <value>All Files (*.*)|*.*|General CSV Files (*.csv)|*.csv</value>
  </data>
  <data name="arrow_Up_16xLG" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\arrow_Up_16xLG.png;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="strNLogUdpReceiverNetworkIPAddress" xml:space="preserve">
    <value>IP Address:{0}{1}{2}</value>
  </data>
  <data name="strErrorSavingScript" xml:space="preserve">
    <value>Error saving script: {0}</value>
  </data>
  <data name="font_color" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\font_color.png;System.Drawing.Bitmap, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="properties_16xLG" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\properties_16xLG.png;System.Drawing.Bitmap, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="StatusAnnotations_Information_16xLG" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\StatusAnnotations_Information_16xLG.png;System.Drawing.Bitmap, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="strLog4NetUdpReceiverNetworkIPAddress" xml:space="preserve">
    <value>IP Address:{0}{1}{2}</value>
  </data>
  <data name="strDocumentMessageAllDisplayed" xml:space="preserve">
    <value>all</value>
  </data>
  <data name="strAllFilesPattern" xml:space="preserve">
    <value>All Files (*.*)|*.*</value>
  </data>
  <data name="strNewLoggerPanelText" xml:space="preserve">
    <value>{0} Settings</value>
  </data>
  <data name="NoBookmark" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\NoBookmark.png;System.Drawing.Bitmap, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="strNlogTcpReceiverNetworkSpeed" xml:space="preserve">
    <value>Speed:{0}{0}{1} MBit/s{2}</value>
  </data>
  <data name="strLog4NetDirectodyReceiverDirectoryDoesNotExist" xml:space="preserve">
    <value>The specified directory does not exists. Please select an existing one.</value>
  </data>
  <data name="strCustomFileReceiverFileDoesNotExist" xml:space="preserve">
    <value>The given log file does not exist. Please select an existing one.</value>
  </data>
  <data name="strDocumentStatusStopped" xml:space="preserve">
    <value>Status: Stopped</value>
  </data>
  <data name="eyedropper_16xLG" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\eyedropper_16xLG.png;System.Drawing.Bitmap, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="strNLogDirectodyReceiverInvalidFilePattern" xml:space="preserve">
    <value>Invalid file pattern specified. Please enter a valie one like '.*\.log[\.]?[\d]?'.</value>
  </data>
  <data name="Script_16x" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\Script_16x.png;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="strOptionPanelFontColorCustomColor" xml:space="preserve">
    <value>Custom</value>
  </data>
  <data name="PencilAngled_16xMD_color" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\PencilAngled_16xMD_color.png;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="strCustomFileReceiverNoColumnizerSelected" xml:space="preserve">
    <value>No columnizer is selected. Please choose an existing, or create a new one.</value>
  </data>
  <data name="strNLogFileReceiverFileDoesNotExist" xml:space="preserve">
    <value>The given log file does not exist. Please select an existing one.</value>
  </data>
  <data name="strErrorOpeningSystemBrowser" xml:space="preserve">
    <value>An error occured while trying to open your webbrowser ({0}).</value>
  </data>
  <data name="RunTests_8790" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\RunTests_8790.png;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="strNLogUdpReceiverNoNetworkInterfaceAvailable" xml:space="preserve">
    <value>No network interface available to listen on.</value>
  </data>
  <data name="strColumnizerConfigurationPleaseEnterName" xml:space="preserve">
    <value>Please enter a name for the columnizer.</value>
  </data>
  <data name="strColumnizerColumnDefaultExpresssion" xml:space="preserve">
    <value>(.*)</value>
  </data>
  <data name="strOpenLogFileError" xml:space="preserve">
    <value>The file "{0}" could not be open as a log file. 
Maybe the data the file contains is not yet supported by Logbert.</value>
  </data>
  <data name="strColumnizerColumnDefaultName" xml:space="preserve">
    <value>New Column</value>
  </data>
  <data name="strSyslogFileReceiverFileDoesNotExist" xml:space="preserve">
    <value>The given log file does not exist. Please select an existing one.</value>
  </data>
  <data name="strLog4NetDirectodyReceiverInvalidFilePattern" xml:space="preserve">
    <value>Invalid file pattern specified. Please enter a valie one like '.*\.log[\.]?[\d]?'.</value>
  </data>
  <data name="strNLogUdpReceiverNetworkSpeed" xml:space="preserve">
    <value>Speed:{0}{0}{1} MBit/s{2}</value>
  </data>
  <data name="strSyslogReceiverNoNetworkInterfaceAvailable" xml:space="preserve">
    <value>No network interface available to listen on.</value>
  </data>
  <data name="strMruFileCouldNotBeFound" xml:space="preserve">
    <value>The file {0} could not be found anymore. Do you want to remove it from the recently used file list?</value>
  </data>
  <data name="strLog4NetUdpReceiverNetworkSpeed" xml:space="preserve">
    <value>Speed:{0}{0}{1} MBit/s{2}</value>
  </data>
  <data name="VSO_Time_16x" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\VSO_Time_16x.png;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="strCustomUdpReceiverNetworkIPAddress" xml:space="preserve">
    <value>IP Address:{0}{1}{2}</value>
  </data>
  <data name="strCustomUdpReceiverNetworkSpeed" xml:space="preserve">
    <value>Speed:{0}{0}{1} MBit/s{2}</value>
  </data>
  <data name="strCustomUdpReceiverNoNetworkInterfaceAvailable" xml:space="preserve">
    <value>No network interface available to listen on.</value>
  </data>
  <data name="strCustomUdpReceiverInvalidIpAddress" xml:space="preserve">
    <value>The given IP address is invalid.</value>
  </data>
  <data name="strLog4NetUdpReceiverInvalidIpAddress" xml:space="preserve">
    <value>The given IP address is invalid.</value>
  </data>
  <data name="strNLogUdpReceiverInvalidIpAddress" xml:space="preserve">
    <value>The given IP address is invalid.</value>
  </data>
  <data name="strCustomDirectodyReceiverDirectoryDoesNotExist" xml:space="preserve">
    <value>The specified directory does not exists. Please select an existing one.</value>
  </data>
  <data name="strCustomDirectodyReceiverInvalidFilePattern" xml:space="preserve">
    <value>Invalid file pattern specified. Please enter a valie one like '.*\.log[\.]?[\d]?'.</value>
  </data>
  <data name="strCustomDirReceiverNoColumnizerSelected" xml:space="preserve">
    <value>No columnizer is selected. Please choose an existing, or create a new one.</value>
  </data>
  <data name="strCustomUdpReceiverNoColumnizerSelected" xml:space="preserve">
    <value>No columnizer is selected. Please choose an existing, or create a new one.</value>
  </data>
  <data name="strCustomTcpReceiverNetworkDescription" xml:space="preserve">
    <value>Description:{0}{1}{2}</value>
  </data>
  <data name="strCustomTcpReceiverNetworkIPAddress" xml:space="preserve">
    <value>IP Address:{0}{1}{2}</value>
  </data>
  <data name="strCustomTcpReceiverNetworkSpeed" xml:space="preserve">
    <value>Speed:{0}{0}{1} MBit/s{2}</value>
  </data>
  <data name="strCustomTcpReceiverNoColumnizerSelected" xml:space="preserve">
    <value>No columnizer is selected. Please choose an existing, or create a new one.</value>
  </data>
  <data name="strCustomTcpReceiverNoNetworkInterfaceAvailable" xml:space="preserve">
    <value>No network interface available to listen on.</value>
  </data>
  <data name="strCustomDirectoryReceiverSelectDirectoryToObserve" xml:space="preserve">
    <value>Select the log directory to observe.</value>
  </data>
  <data name="strCustomUdpReceiverNetworkDescription" xml:space="preserve">
    <value>Description:{0}{1}{2}</value>
  </data>
  <data name="strSyslogFileReceiverTimestampNotSpecified" xml:space="preserve">
    <value>Please enter a valid timestamp format, or select a predefined one.</value>
  </data>
  <data name="strSyslogUdpReceiverTimestampNotSpecified" xml:space="preserve">
    <value>Please enter a valid timestamp format, or select a predefined one.</value>
  </data>
  <data name="Logbert_Logo_Background" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\Logbert Logo Background.png;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="FindSymbol_6263" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\FindSymbol_6263.png;System.Drawing.Bitmap, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="Remove_16xMD" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\Remove_16xMD.png;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="strOptionPanelFontColorApplyColorScheme" xml:space="preserve">
    <value>Do you want to adjust the level back- and foreground colors to match the new selected application theme "{0}"?</value>
  </data>
  <data name="Debug_Light" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\Debug_Light.png;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="Error_Light" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\Error_Light.png;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="Fatal_Light" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\Fatal_Light.png;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="Info_Light" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\Info_Light.png;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="Trace_Light" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\Trace_Light.png;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="Warn_Light" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\Warn_Light.png;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="strMainUpdateAvailable" xml:space="preserve">
    <value>Update Available</value>
  </data>
</root>